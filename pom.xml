<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.trino.plugin.pulsar</groupId>
    <artifactId>trino-plugin-pulsar</artifactId>
    <packaging>pom</packaging>
    <description>Trino - Pulsar connector</description>
    <name>Pulsar SQL :: Pulsar Trino Connector Packaging</name>
    <version>1.0</version>

    <properties>
        <!--<air.main.basedir>${project.parent.basedir}</air.main.basedir>-->
        <pulsar.version>3.3.1</pulsar.version>
        <bookkeeer.version>4.17.1</bookkeeer.version>
        <trino-spi.version>457</trino-spi.version>
        <maven.compiler.source>22</maven.compiler.source>
        <maven.compiler.target>22</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <airlift.version>266</airlift.version>
        <avro.version>1.12.0</avro.version>
        <jctools.version>2.1.2</jctools.version>
        <dslJson.verson>1.8.4</dslJson.verson>
        <jersey.version>2.34</jersey.version>
        <slf4j.version>1.7.32</slf4j.version>
        <joda.version>2.10.10</joda.version>
        <lombok.version>1.18.30</lombok.version>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <jaxb-api>2.3.1</jaxb-api>
        <javax.activation.version>1.2.0</javax.activation.version>
        <jakarta.activation.version>1.2.2</jakarta.activation.version>
        <jakarta.xml.bind.version>2.3.3</jakarta.xml.bind.version>
        <jakarta.validation.version>2.0.2</jakarta.validation.version>
        <jna.version>5.12.1</jna.version>
        <testcontainers.version>1.18.3</testcontainers.version>
        <testng.version>7.7.1</testng.version>
        <mockito.version>3.12.4</mockito.version>
        <jsonwebtoken.version>3.12.4</jsonwebtoken.version>
        <assertj-core.version>3.24.2</assertj-core.version>
        <jetty.version>9.4.53.v20231009</jetty.version>
    </properties>
<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${airlift.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>json</artifactId>
            <version>${airlift.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.pulsar</groupId>
            <artifactId>pulsar</artifactId>
            <version>${pulsar.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.pulsar</groupId>
            <artifactId>pulsar-client-admin</artifactId>
            <version>${pulsar.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.pulsar</groupId>
            <artifactId>managed-ledger</artifactId>
            <version>${pulsar.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jctools</groupId>
            <artifactId>jctools-core</artifactId>
            <version>${jctools.version}</version>
        </dependency>

        <dependency>
            <groupId>com.dslplatform</groupId>
            <artifactId>dsl-json</artifactId>
            <version>${dslJson.verson}</version>
        </dependency>

        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-plugin-toolkit</artifactId>
            <version>${trino-spi.version}</version>
        </dependency>

        <!-- Presto SPI -->
        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-spi</artifactId>
            <version>${trino-spi.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda.version}</version>
        </dependency>

        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-record-decoder</artifactId>
            <version>${trino-spi.version}</version>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>${jsonwebtoken.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-main</artifactId>
            <version>${trino-spi.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-testing</artifactId>
            <version>${trino-spi.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.pulsar</groupId>
            <artifactId>pulsar-broker</artifactId>
            <version>3.3.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.pulsar</groupId>
            <artifactId>testmocks</artifactId>
            <version>${pulsar.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-http</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- force specific version of slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>bom</artifactId>
            <version>${airlift.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>1.0.2</version>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.pulsar</groupId>
            <artifactId>buildtools</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>${javax.annotation-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.20.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    </dependencyManagement>
    <build>
       <pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <attach>true</attach>
                    <tarLongFileMode>posix</tarLongFileMode>
                    <descriptors>
                        <descriptor>src/assembly/assembly.xml</descriptor>
                    </descriptors>
                     <!-- TODO: these should use https://junit.org/junit5/docs/current/user-guide/#running-tests-build-maven-config-params -->
                    <!-- use system properties to work around https://youtrack.jetbrains.com/issue/IDEA-339034 -->
                    <systemPropertyVariables>
                        <junit.jupiter.execution.timeout.thread.mode.default>SEPARATE_THREAD</junit.jupiter.execution.timeout.thread.mode.default>
                        <junit.jupiter.extensions.autodetection.enabled>true</junit.jupiter.extensions.autodetection.enabled>
                        <junit.jupiter.execution.parallel.enabled>true</junit.jupiter.execution.parallel.enabled>
                        <junit.jupiter.execution.parallel.mode.default>concurrent</junit.jupiter.execution.parallel.mode.default>
                        <junit.jupiter.execution.parallel.mode.classes.default>concurrent</junit.jupiter.execution.parallel.mode.classes.default>
                    </systemPropertyVariables>
                    <includes>
                        <!-- Tests classes should start with "Test", but we do also want to include tests incorrectly named, with "Test" at the end -->
                        <include>**/Test*.java</include>
                        <include>**/*Test.java</include>
                        <!--<include>**/Benchmark*.java</include>-->
                    </includes>
                    <excludes>
                        <exclude>**/*jmhTest*.java</exclude>
                        <exclude>**/*jmhType*.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>errorprone-compiler</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <!--suppress MavenModelInspection -->
                        <configuration combine.children="merge">
                            <!-- forking not required due to JVM flags in .mvn/jvm.config -->
                            <!-- see https://errorprone.info/docs/installation#maven -->
                            <!-- Do not fail on error-prone's warnings even for modules using air.compiler.fail-warnings -->
                            <!-- TODO silence warnings we choose to ignore and raise important warnings to error and then remove <failOnWarning> -->
                            <failOnWarning>false</failOnWarning>
                            <compilerArgs>
                                <arg>-XDcompilePolicy=simple</arg>
                                <arg>
                                    -Xplugin:ErrorProne \
                                    -Xep:AlmostJavadoc:ERROR \
                                    -Xep:AmbiguousMethodReference:ERROR \
                                    -Xep:AnnotateFormatMethod:ERROR \
                                    -Xep:ArgumentSelectionDefectChecker:ERROR \
                                    -Xep:ArrayAsKeyOfSetOrMap:ERROR \
                                    -Xep:AssertEqualsArgumentOrderChecker:ERROR \
                                    -Xep:AssertThrowsMultipleStatements:ERROR \
                                    -Xep:AssertionFailureIgnored:ERROR \
                                    -Xep:AttemptedNegativeZero:ERROR \
                                    -Xep:BadComparable:ERROR \
                                    -Xep:BadInstanceof:ERROR \
                                    -Xep:BigDecimalEquals:ERROR \
                                    -Xep:BoxedPrimitiveConstructor:ERROR \
                                    -Xep:ByteBufferBackingArray:ERROR \
                                    -Xep:CacheLoaderNull:ERROR \
                                    -Xep:CatchAndPrintStackTrace:ERROR \
                                    -Xep:CatchFail:ERROR \
                                    -Xep:ClassCanBeStatic:ERROR \
                                    -Xep:ClassName:ERROR \
                                    -Xep:ClassNewInstance:ERROR \
                                    -Xep:CollectionUndefinedEquality:ERROR \
                                    -Xep:CollectorShouldNotUseState:ERROR \
                                    -Xep:CompareToZero:ERROR \
                                    -Xep:DateChecker:ERROR \
                                    -Xep:DateFormatConstant:ERROR \
                                    -Xep:DefaultCharset:ERROR \
                                    -Xep:DepAnn:ERROR \
                                    -Xep:DeprecatedVariable:ERROR \
                                    -Xep:DistinctVarargsChecker:ERROR \
                                    -Xep:DoNotCallSuggester:OFF \
                                    -Xep:DoubleCheckedLocking:ERROR \
                                    -Xep:EmptyBlockTag:ERROR \
                                    -Xep:EmptySetMultibindingContributions:ERROR \
                                    <!-- we would rather want the opposite check -->
                                    -Xep:EqualsGetClass:OFF \
                                    -Xep:EqualsIncompatibleType:ERROR \
                                    -Xep:EqualsUnsafeCast:ERROR \
                                    -Xep:EqualsUsingHashCode:ERROR \
                                    -Xep:ErroneousBitwiseExpression:ERROR \
                                    -Xep:ErroneousThreadPoolConstructorChecker:ERROR \
                                    -Xep:EscapedEntity:ERROR \
                                    -Xep:ExtendingJUnitAssert:ERROR \
                                    -Xep:ExtendsObject:ERROR \
                                    -Xep:FallThrough:ERROR \
                                    -Xep:Finalize:ERROR \
                                    -Xep:GetClassOnEnum:ERROR \
                                    <!-- TODO enable globally -->
                                    -Xep:GuardedBy:${trino.error-prone.guarded-by} \
                                    -Xep:HidingField:ERROR \
                                    -Xep:JavaTimeDefaultTimeZone:OFF \
                                    <!-- covered by Modernizer -->
                                    -Xep:JdkObsolete:OFF \
                                    <!-- This check requires list fields to be declared as ImmutableList, which is not in line with project's code style -->
                                    -Xep:Immutable:OFF \
                                    <!-- flags enums with List fields even if initialized with ImmutableList, and other false positives -->
                                    -Xep:ImmutableEnumChecker:OFF \
                                    -Xep:ImmutableSetForContains:ERROR \
                                    <!-- fields/variables should not differ only in case -->
                                    -Xep:InconsistentCapitalization:ERROR \
                                    -Xep:InconsistentHashCode:ERROR \
                                    -Xep:InjectOnConstructorOfAbstractClass:ERROR \
                                    -Xep:InvalidInlineTag:ERROR \
                                    -Xep:MissingCasesInEnumSwitch:ERROR \
                                    -Xep:MissingOverride:ERROR \
                                    <!-- Sometimes our javadoc contains just a @see directive -->
                                    -Xep:MissingSummary:OFF \
                                    -Xep:ModifiedButNotUsed:ERROR \
                                    -Xep:MutablePublicArray:ERROR \
                                    -Xep:NarrowCalculation:ERROR \
                                    -Xep:NarrowingCompoundAssignment:ERROR \
                                    -Xep:NullOptional:ERROR \
                                    -Xep:NullableOptional:ERROR \
                                    -Xep:NullablePrimitive:ERROR \
                                    -Xep:ObjectEqualsForPrimitives:ERROR \
                                    -Xep:ObjectToString:ERROR \
                                    -Xep:OptionalNotPresent:ERROR \
                                    -Xep:OrphanedFormatString:ERROR \
                                    -Xep:Overrides:ERROR \
                                    <!-- flags List fields even if initialized with ImmutableList -->
                                    -Xep:PreferredInterfaceType:OFF \
                                    -Xep:PrimitiveArrayPassedToVarargsMethod:ERROR \
                                    -Xep:RethrowReflectiveOperationExceptionAsLinkageError:OFF \
                                    -Xep:StaticAssignmentOfThrowable:ERROR \
                                    -Xep:StaticGuardedByInstance:ERROR \
                                    -Xep:StreamResourceLeak:ERROR \
                                    -Xep:StringCaseLocaleUsage:ERROR \
                                    -Xep:SuppressWarningsDeprecated:ERROR \
                                    -Xep:ThreeLetterTimeZoneID:ERROR \
                                    -Xep:UnicodeEscape:ERROR \
                                    -Xep:UnnecessaryLongToIntConversion:ERROR \
                                    -Xep:UnnecessaryMethodReference:ERROR \
                                    -Xep:UnnecessaryOptionalGet:ERROR \
                                    -Xep:UnnecessaryParentheses:ERROR \
                                    -Xep:UnnecessaryStringBuilder:ERROR \
                                    -Xep:UnusedMethod:OFF \
                                    -Xep:UnusedVariable:ERROR \
                                    -Xep:UseEnumSwitch:ERROR \
                                    -XepExcludedPaths:.*/target/generated-(|test-)sources/.*
                                </arg>
                            </compilerArgs>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>com.google.errorprone</groupId>
                                    <artifactId>error_prone_core</artifactId>
                                    <version>${dep.errorprone.version}</version>
                                </path>
                            </annotationProcessorPaths>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Allow to run goals with an empty local Maven repository -->
            <id>disable-check-spi-dependencies</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.trino</groupId>
                        <artifactId>trino-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-check-spi-dependencies</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>gib</id>
            <properties>
                <!-- the *local* master, not refs/remotes/... -->
                <gib.referenceBranch>master</gib.referenceBranch>
                <!-- set as properties, not configuration, to allow overriding them -->
                <gib.buildDownstream>true</gib.buildDownstream>
                <gib.buildUpstream>true</gib.buildUpstream>
                <gib.disableIfBranchMatches>master</gib.disableIfBranchMatches>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.github.gitflow-incremental-builder</groupId>
                        <artifactId>gitflow-incremental-builder</artifactId>
                        <version>4.5.1</version>
                        <extensions>true</extensions>
                        <configuration>
                            <compareToMergeBase>true</compareToMergeBase>
                            <uncommitted>true</uncommitted>
                            <untracked>true</untracked>
                            <buildUpstreamMode>impacted</buildUpstreamMode>
                            <!-- Skip tests and checks for upstream modules since they have not been modified but are still required to be built -->
                            <skipTestsForUpstreamModules>true</skipTestsForUpstreamModules>
                            <argsForUpstreamModules>-Dmaven.source.skip=true -Dair.check.skip-all</argsForUpstreamModules>
                            <!-- Any modules selected with -pl will be built fully (with tests etc.) if the selected module itself is changed
                            or one of its (non-selected) upstream modules -->
                            <disableSelectedProjectsHandling>true</disableSelectedProjectsHandling>
                            <failOnMissingGitDir>true</failOnMissingGitDir>
                            <failOnError>true</failOnError>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>